# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-test:
    strategy: 
      matrix:
        build_type: [Debug, Release]
        compiler: [gcc, clang]

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install Vulkan SDK
      run: wget -qO- https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo tee /etc/apt/trusted.gpg.d/lunarg.asc && sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-jammy.list https://packages.lunarg.com/vulkan/lunarg-vulkan-jammy.list && sudo apt-get -y update && sudo apt-get install -y vulkan-sdk mesa-utils mesa-vulkan-drivers libvulkan1 vulkan-tools vulkan-validationlayers clang

    - name: Configure CMake gcc
      if: ${{matrix.compiler == 'gcc'}}
      run:  CC=gcc CXX=g++ cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.build_type}}

    - name: Configure CMake clang
      if: ${{matrix.compiler == 'clang'}}
      run:  CC=clang CXX=clang++ cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.build_type}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{matrix.build_type}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{matrix.build_type}}

